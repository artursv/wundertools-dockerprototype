#!/usr/bin/env bash
#
# INSTRUCTIONS:
#   Run this is though you were running composer, but in the root project of the folder
#

# Project name as used to create containers
PROJECT="${PROJECT:wundertool2}"

# App project root used to mount project files into containers
if [ -z "${APP}" ]; then
	if [ -z "${PWD}" ]; then
		PWD="$(pwd)"
	fi
	APP="${PWD}/app"
fi

if [ ! -f ~/.gitconfig ]; then
    echo ">> creating host user ~/.gitconfig, in which composer will store a github token, if you provide it.We will use a host file for this, so that the github token is persistant, and doesn't need to be re-entered."
    touch ~/.gitconfig
fi

#
# This image likes to have the project at /app/project as the /app
# is the "app" user's $HOME path, which is where various user folders
# and files will b created.  Mount the project beneath that prevents
# creation of mount point files for .ssh and .gitconfig in the source
# code.
#

docker run --rm -t -i \
    --net "source_default" \
    --hostname=${PROJECT} \
    --volume="${APP}:/app/project" \
    --volume="${HOME}/.drush:/app/.drush" \
    --volume="${HOME}/.console:/app/.console" \
    --volume="${HOME}/.gitconfig:/app/.gitconfig" \
    --volume="${HOME}/.ssh:/app/.ssh" \
    --entrypoint=/usr/bin/composer \
    -w=/app/project \    
    --name="composer" \
    jamesnesbitt/wunder-developershell \
    --working-dir=/app/project ${@}
