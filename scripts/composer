#!/usr/bin/env bash
#
# INSTRUCTIONS:
#   Run this is though you were running drush, but in the root project of the folder
#

# Project name as used to create containers
PROJECT="${PROJECT:wundertool2}"

# Use a root path
PWD="${PWD:$(pwd)}"

# App project root
APP="${APP:${PWD}/app"
APP_PROJECT="${APP_PROJECT:${APP}/project}"


docker run --rm -t -i \
    --net "source_default" \
    -v ${APP_PROJECT}:/app/project \
    -v ${APP}/drush:/app/.drush \
    -v ${HOME}/./ssh:/app/.ssh \
    -v ${HOME}/./gitconfig:/app/.gitconfig \
    --hostname=${PROJECT} \
    --link=${PROJECT}_db:database.app \
    -w=/app/project/web \
    --entrypoint=/app/project/vendor/bin/drush \
    jamesnesbitt/wunder-developershell \
    ${@}


if [ -z "~/.gitconfig" ]; then
    echo ">> creating host user ~/.gitconfig, in which composer will store a github token, if you provide it.
We will use a host file for this, so that the github token is persistant, and doesn't need to be re-entered."
    touch ~/.gitconfig
fi

docker run --rm -t -i \
    --net "source_default" \
    -v ${APP_PROJECT}:/app/project \
    -v ${HOME}/./ssh:/app/.ssh \
    -v ${HOME}/./gitconfig:/app/.gitconfig \
    --hostname=${PROJECT} \
    -w=/app/project/web \
    --entrypoint=/usr/bin/composer \
    jamesnesbitt/wunder-developershell \
    ${@}
